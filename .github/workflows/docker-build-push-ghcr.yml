name: Build Docker image to target platform(s) and push to ghcr using buildx

on:
  workflow_call:
    inputs:
      dockerfile:
        description: 'Path to docker build file'
        required: false
        type: string
        default: 'Dockerfile'
      platform:
        description: 'Comma delimited list of platform architecute targets for the build image'
        required: false
        type: string
        default: 'linux/amd64'

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  build-and-push:
    name: build and push
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: log into registry
        run: echo "${{ secrets.PACKAGE_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: build and push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}
          GITHUB_REF="${{ github.ref }}"

          # Change all uppercase to lowercase
          IMAGE_ID="$(echo $IMAGE_ID | tr '[:upper:]' '[:lower:]')"

          # Strip git ref prefix from version
          # shellcheck disable=SC2001
          VERSION=$(echo "$GITHUB_REF" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "$GITHUB_REF" == "refs/tags/*" ]] && VERSION="${VERSION//^v//}"

          # Use Docker `latest` tag convention
          [ "$VERSION" == main ] && VERSION=latest

          echo IMAGE_ID="$IMAGE_ID"
          echo VERSION="$VERSION"

          docker buildx build \
          --push --tag "$IMAGE_ID:$VERSION" \
          --platform ${{ inputs.platform }} . \
          --file ${{ inputs.dockerfile }}